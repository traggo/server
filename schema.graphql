schema {
    query: RootQuery
    mutation: RootMutation
}

type RootMutation {
    createTag(key: String!, color: String!, type: TagDefinitionType!): TagDefinition
    removeTag(key: String!): TagDefinition

    createUser(name: String!, pass: String!, admin: Boolean!): User
    removeUser(id: Int!): User
    updateUser(id: Int!, name: String!, pass: String, admin: Boolean!): User
}

type RootQuery {
    suggestTag(query: String!): [TagDefinition!]
    tags: [TagDefinition!]
    users: [User!]
}

type TagDefinition {
    color: String!
    key: String!
    type: TagDefinitionType!
    user: User!
}

enum TagDefinitionType {
    novalue
    singlevalue
}

type User {
    admin: Boolean!
    id: Int!
    name: String!
}